[buildout]
# index = http://packages.lizardsystem.nl
# extends =
#     http://packages.lizardsystem.nl/kgs/latest.cfg
find-links =
    https://www.djangoproject.com/download/1.6b4/tarball/#egg=Django-1.6b4
unzip = true
prefer-final = true
socket-timeout = 1
show-picked-versions = true
extensions =
    mr.developer
parts =
#    sysegg
    django
    omelette
    console_scripts
#    sphinx
    pydev
develop = .
eggs =
    trs


[versions]
# Specific pins
trs =
Django = 1.6b4

# Reported by buildout.
collective.recipe.omelette = 0.16
coverage = 3.7
createcoverage = 1.2
django-extensions = 1.2.4
djangorecipe = 1.5
mr.developer = 1.26
pb.recipes.pydev = 0.4.5
pep8 = 1.4.6
pyflakes = 0.7.3
setuptools = 1.1.6
six = 1.4.1
zc.buildout = 2.2.1
zc.recipe.egg = 2.0.1


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk


# [sysegg]
# # Add eggs here that are best handled through OS-level packages.
# recipe = osc.recipe.sysegg
# force-sysegg = true
# eggs =


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[django]
recipe = djangorecipe
project = trs
projectegg = trs
settings = testsettings
test = trs
eggs =
    ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    pyflakes
#    zest.releaser


# [sphinx]
# recipe = collective.recipe.sphinxbuilder
# source = ${buildout:directory}/doc/source
# build = ${buildout:directory}/doc/build
# eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
